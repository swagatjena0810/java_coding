package Workset;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Comparator;

import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.Function;
import java.util.stream.Collectors;

public class javabasic {
	public static void main(String[] args) {
		
		
		
		//3
//		String s="capgemini";
//		String res="";
//		for(int i=s.length()-1;i>=0;i--) {
//			res+=s.charAt(i);
//		}
//		System.out.println(res);
		
		
		
		//3
		
		
		
		
		//4
//		int[] nums= {1,3,5,9,11,13,15,17};
//		int diff=nums[1]-nums[0];
//		int j=0;
//		for(int i=nums[0];i<=nums[nums.length-1];i+=diff) {
//			if(i!=nums[j]) {
//				System.out.println(i);
//				break;
//			}
//			else {
//				j++;
//			}
//			
//		}
		
		
		
		//5
//		 String s="hello";
//	     char ch='l';
//	     Long cnt=s.chars().filter(c->c==ch).count();
//	     System.out.println(cnt);
		
		
		//6
//		String s="madamse";
//		for(int i=0;i<=s.length()/2;i++) {
//			if(s.charAt(i)!=s.charAt(s.length()-1-i)) {
//				System.out.println("Not a palindrome");
//				break;
//			}
//			
//		}
//		System.out.println("palindrome");
		
		
		//7
//		String[] strings= {"Capgemini","Accenture","TCS","EPAM"};
//		Arrays.stream(strings).sorted()
//		.forEach(System.out::println);
		
		
		//14
//		String s="capgemini";
//		LinkedHashMap<Character, Long> res=s.chars()
//                .mapToObj(ch->(char)ch)
//                .collect(Collectors.groupingBy(Function.identity(),
//                		LinkedHashMap::new,
//                		Collectors.counting()));
//		System.out.println(res);
		
		
		


		
		
//22
//		int n=122;
//		String s=n+"";
//		String rev="";
//		for(int i=s.length()-1;i>=0;i--) {
//			rev+=s.charAt(i);
//		}
//		int r=Integer.parseInt(rev);
//		System.out.println(r==n);
		
		
		
		//25
//		int n=82;
//		int sum=0;
//		while(n>=1) {
//			sum+=n%10;
//			n=n/10;
//		}
//		int sum2=0;
//		while(sum>=1) {
//			sum2+=sum%10;
//			sum=sum/10;
//		}
//		if(sum2==1) {
//			System.out.println("magic");
//		}
//		else {
//			System.out.println("not magic");
//		}
		
		
		
		

		
		
		
		
		//32
//		String s="hgFak";
//		if(s.matches("[A-Za-z]+")){
//			System.out.println("Alphabet only");
//		}
//		else {
//			System.out.println("contains digits  also");
//		}
//		
		
		
		
		//35
//		String s1="left";
//		String s2="felt";
//		char[] c1=s1.toCharArray();
//		char[] c2=s2.toCharArray();
//		Arrays.sort(c1);
//		Arrays.sort(c2);
//		boolean flag=Arrays.equals(c1, c2);
//		if(flag) {
//			System.out.println("Anagram");
//		}
//		else {
//			System.out.println("Not angram");
//		}
		
		
		
		//39
//		int arr[]= {3,7,5,6,2};
//		int max=Integer.MIN_VALUE;
//		int min=Integer.MAX_VALUE;
//		for(int i=0;i<arr.length;i++) {
//			if(arr[i]>max) {
//				max=arr[i];
//			}
//			if(arr[i]<min) {
//				min=arr[i];
//			}
//		}
//		System.out.println("max:"+max+" min:"+min);
		
		
		
		
		//42
		
//		String s="fsg5%vsssns^&s";
//		String regex="[^a-z]";
//		s.replaceAll(regex,"");
//		System.out.println(s);
		
		
		//44	
//		int a=0,b=1,c;
//		do {
//			System.out.print(a+" ");
//			c=a+b;
//			a=b;
//			b=c;
//			
//		}while(a<31);
		
//		int n=5;
//		for(int i=0;i<n;i++) {
//			if(i!=n-1) {
//				System.out.println('*');
//			}
//			else {
//				for(int j=0;j<n;j++) {
//					System.out.print("*");
//				}
//			}
//		}
		
		
		//48
		List<Integer> numList=Arrays.asList(2,3,3,3,65,4,3,3,2);
		Set<Integer> set = new LinkedHashSet<>(numList);
		List<Integer> uniqueList=new ArrayList<>(set);
		uniqueList.forEach(System.out::println);
			
			
		
	}
	
}
